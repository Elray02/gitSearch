const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

require('dotenv').config();
const environment = argv.environment;

function writeFileUsingFS(inputTargetPath, InpuntEnviFileContent) {
  writeFile(inputTargetPath, InpuntEnviFileContent, (err) => {
    if (err) {
      console.log(err);
    }
    if (InpuntEnviFileContent !== '') {
      console.log(`wrote variables to ${inputTargetPath}`);
    }
  });
}

// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}

// creates the `environment.prod.ts` and `environment.ts` file if it does not exist
writeFileUsingFS('./src/environments/environment.prod.ts', '');
writeFileUsingFS('./src/environments/environment.ts', '');

// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = environment === 'prod';

// choose the correct targetPath based on the environment chosen
const targetPathProd = './src/environments/environment.prod.ts';
const targetPathDev = './src/environments/environment.ts';

// actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContentProd = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export const environment = {
    production: ${isProduction},
    TOKEN__GIT: '${process.env.TOKEN__GIT}'
  };
`;
// actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContentDev = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export const environment = {
    production: ${isProduction},
    TOKEN__GIT: '${process.env.TOKEN__GIT}'
  };
`;

writeFileUsingFS(targetPathProd, environmentFileContentProd); // appending data into the target file
writeFileUsingFS(targetPathDev, environmentFileContentDev); // appending data into the target file
